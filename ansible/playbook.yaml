---

-
  name: Set up drinkmenu kiosk - common
  hosts: all
  tasks:
    # TODO: probably try to ensure this only runs if swap is on - otherwise mkinitramfs may take a while
    # -
    #   name: Disable swap
    #   shell: dphys-swapfile swapoff && dphys-swapfile uninstall && update-rc.d dphys-swapfile remove && mkinitramfs -o /boot/initrd
    #   become: true

    -
      name: Allow updates
      shell: apt-get --allow-releaseinfo-change update
      become: true

    -
      name: Update packages
      apt:
        cache_valid_time: 86400
        update_cache: yes
        upgrade: yes
      become: true

    -
      name: Install base packages
      apt:
        cache_valid_time: 86400
        name:
          - git
          - build-essential
          - screen
          - python3
          - python3-pip
          # For python image stuff
          # - libopenjp2-7
          # - libtiff5
      become: true

-
  name: Set up drinkmenu kiosk
  hosts: kiosk
  tasks:
    -
      name: Configure pi
      shell: raspi-config nonint {{ item[0] }} {{ item[1] }}
      with_items:
        - [do_change_locale, en_US.UTF-8]
        - [do_overscan, 0]
        - [do_boot_behaviour, B4]
      become: true

    -
      name: Install kiosk packages
      apt:
        cache_valid_time: 86400
        install_recommends: no
        name:
          - xserver-xorg
          - x11-xserver-utils
          - xinit
          - openbox
          - chromium-browser

    -
      name: Set up kiosk autostart
      lineinfile:
        path: /etc/xdg/openbox/autostart
        create: yes
        line: "{{ item }}"
      with_items:
        - xset -dpms            # turn off display power management system
        - xset s noblank        # turn off screen blanking
        - xset s off            # turn off screen saver
        # Allow quitting the X server with CTRL-ATL-Backspace
        - setxkbmap -option terminate:ctrl_alt_bksp
        # Remove exit errors from the config files that could trigger a warning
        - sed -i 's/"exited_cleanly":false/"exited_cleanly":true/' ~/.config/chromium/'Local State'
        - sed -i 's/"exited_cleanly":false/"exited_cleanly":true/; s/"exit_type":"[^"]\+"/"exit_type":"Normal"/' ~/.config/chromium/Default/Preferences

    -
      name: Set up kiosk autostart - chrome command
      lineinfile:
        path: /etc/xdg/openbox/autostart
        create: yes
        regexp: "^chromium-browser"
        # line: chromium-browser  --noerrdialogs --disable-infobars --kiosk $KIOSK_URL --check-for-update-interval=31536000
        line: chromium-browser --start-fullscreen --kiosk --incognito --noerrdialogs --disable-translate --no-first-run --fast --fast-start --disable-infobars --disable-features=TranslateUI --disk-cache-dir=/dev/null  --password-store=basic --disable-pinch --overscroll-history-navigation=disabled --disable-features=TouchpadOverscrollHistoryNavigation --check-for-update-interval=31536000 $KIOSK_URL
      become: true

    -
      name: Set up kiosk autostart env
      lineinfile:
        path: /etc/xdg/openbox/environment
        create: yes
        regexp: "^export KIOSK_URL"
        line: export KIOSK_URL={{ kiosk_url }}
      become: true

    -
      name: Set up kiosk startx
      lineinfile:
        path: /home/pi/.bash_profile
        create: yes
        line: "[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && startx -- -nocursor"

-
  name: Set up drinkmenu print service
  hosts: printer
  tasks:
    -
      name: Install python packages
      shell: python3 -m pip install virtualenv --user

    -
      name: Install drinkmenu
      git:
        dest: "{{ drinkmenu.repo.dest }}"
        repo: "{{ drinkmenu.repo.repo }}"
        version: "{{ drinkmenu.repo.version }}"

    -
      name: Create virtual environment
      shell: python3 -m virtualenv -p python3 {{ drinkmenu.venv }}

    -
      name: Install requirements
      shell: "{{ drinkmenu.venv }}/bin/pip install -r {{ drinkmenu.repo.dest }}/requirements/base.txt"

    -
      name: Install printing requirements
      shell: "{{ drinkmenu.venv }}/bin/pip install -r {{ drinkmenu.repo.dest }}/requirements/print.txt"

    -
      name: Copy config file
      copy:
        dest: "{{ drinkmenu.repo.dest ~ '/config.json' }}"
        src: "{{ config_file }}"

    -
      name: Create print service
      template:
        src: files/printer.service.jinja
        dest: /etc/systemd/system/printer.service
      become: true

    -
      name: Enable & start print service
      service:
        name: printer
        enabled: yes
        state: started
      become: true
